
//! Autogenerated weights for `pallet_neuro_zk`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 39.0.0
//! DATE: 2025-06-30, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `desktop-tb`, CPU: `AMD Ryzen 9 5900X 12-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// ./target/release/cyborg-node
// benchmark
// pallet
// --runtime=./target/release/wbuild/cyborg-runtime/cyborg_runtime.wasm
// --genesis-builder=runtime
// --pallet=pallet_neuro_zk
// --extrinsic=*
// --steps=50
// --repeat=20
// --template=.maintain/frame-weight-template.hbs
// --output=./runtime/src/weights/pallet_neuro_zk.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_neuro_zk`.
pub trait WeightInfo {
	fn request_proof() -> Weight;
	fn submit_proof() -> Weight;
	fn on_new_data_finalize() -> Weight;
}

/// Weights for `pallet_neuro_zk` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_neuro_zk::WeightInfo for SubstrateWeight<T> {
	/// Storage: `NeuroZk::RequestedProofs` (r:1 w:1)
	/// Proof: `NeuroZk::RequestedProofs` (`max_values`: None, `max_size`: Some(17), added: 2492, mode: `MaxEncodedLen`)
	/// Storage: `TaskManagement::Tasks` (r:1 w:0)
	/// Proof: `TaskManagement::Tasks` (`max_values`: None, `max_size`: Some(561088), added: 563563, mode: `MaxEncodedLen`)
	fn request_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `28`
		//  Estimated: `564553`
		// Minimum execution time: 13_770_000 picoseconds.
		Weight::from_parts(19_710_000, 564553)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `NeuroZk::RequestedProofs` (r:1 w:1)
	/// Proof: `NeuroZk::RequestedProofs` (`max_values`: None, `max_size`: Some(17), added: 2492, mode: `MaxEncodedLen`)
	/// Storage: `TaskManagement::Tasks` (r:1 w:1)
	/// Proof: `TaskManagement::Tasks` (`max_values`: None, `max_size`: Some(561088), added: 563563, mode: `MaxEncodedLen`)
	fn submit_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `49`
		//  Estimated: `564553`
		// Minimum execution time: 57_482_000 picoseconds.
		Weight::from_parts(59_962_000, 564553)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `TaskManagement::Tasks` (r:1 w:1)
	/// Proof: `TaskManagement::Tasks` (`max_values`: None, `max_size`: Some(561088), added: 563563, mode: `MaxEncodedLen`)
	/// Storage: `NeuroZk::SubmittedPerProof` (r:1 w:1)
	/// Proof: `NeuroZk::SubmittedPerProof` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NeuroZk::VerificationResultsPerProof` (r:1 w:1)
	/// Proof: `NeuroZk::VerificationResultsPerProof` (`max_values`: None, `max_size`: Some(22), added: 2497, mode: `MaxEncodedLen`)
	fn on_new_data_finalize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `49`
		//  Estimated: `564553`
		// Minimum execution time: 24_751_000 picoseconds.
		Weight::from_parts(25_831_000, 564553)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `NeuroZk::RequestedProofs` (r:1 w:1)
	/// Proof: `NeuroZk::RequestedProofs` (`max_values`: None, `max_size`: Some(17), added: 2492, mode: `MaxEncodedLen`)
	/// Storage: `TaskManagement::Tasks` (r:1 w:0)
	/// Proof: `TaskManagement::Tasks` (`max_values`: None, `max_size`: Some(561088), added: 563563, mode: `MaxEncodedLen`)
	fn request_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `28`
		//  Estimated: `564553`
		// Minimum execution time: 13_770_000 picoseconds.
		Weight::from_parts(19_710_000, 564553)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `NeuroZk::RequestedProofs` (r:1 w:1)
	/// Proof: `NeuroZk::RequestedProofs` (`max_values`: None, `max_size`: Some(17), added: 2492, mode: `MaxEncodedLen`)
	/// Storage: `TaskManagement::Tasks` (r:1 w:1)
	/// Proof: `TaskManagement::Tasks` (`max_values`: None, `max_size`: Some(561088), added: 563563, mode: `MaxEncodedLen`)
	fn submit_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `49`
		//  Estimated: `564553`
		// Minimum execution time: 57_482_000 picoseconds.
		Weight::from_parts(59_962_000, 564553)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `TaskManagement::Tasks` (r:1 w:1)
	/// Proof: `TaskManagement::Tasks` (`max_values`: None, `max_size`: Some(561088), added: 563563, mode: `MaxEncodedLen`)
	/// Storage: `NeuroZk::SubmittedPerProof` (r:1 w:1)
	/// Proof: `NeuroZk::SubmittedPerProof` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NeuroZk::VerificationResultsPerProof` (r:1 w:1)
	/// Proof: `NeuroZk::VerificationResultsPerProof` (`max_values`: None, `max_size`: Some(22), added: 2497, mode: `MaxEncodedLen`)
	fn on_new_data_finalize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `49`
		//  Estimated: `564553`
		// Minimum execution time: 24_751_000 picoseconds.
		Weight::from_parts(25_831_000, 564553)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
}
